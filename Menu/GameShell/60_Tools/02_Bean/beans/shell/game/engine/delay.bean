
// SDL_GetTicks: This value wraps if the program runs for more than ~49 days.

class game+, delay {

    private import lib::sdl2;

    struct delay {
        duration uint32;
        t uint32;
        last_t uint32;
        done bool;
    }

    inline init(duration uint32, done bool = false) {
        this.duration = duration;
        this.t = 0;
        this.last_t = 0;
        this.done = done;
    }

    inline reset() {
        this.t = 0;
        this.last_t = 0;
        this.done = false;
    }

    inline done() {
        this.done = true;
    }

    inline done?() bool {
        return this.done;
    }

    inline do() bool {
        if !this.done {
            this.last_t = SDL_GetTicks();
            if !this.t;
                this.t = this.last_t + this.duration;
            if this.t > this.last_t;
                return false;
            this.done = true;
        }
        return true;
    }

    inline undo() {
        this.last_t = SDL_GetTicks();
        this.t = this.last_t + this.duration;
        this.done = false;
    }

    //

    inline get_duration() uint32 {
        return this.duration;
    }

    inline set_duration(duration uint32) {
        this.duration = duration;
    }

    inline inc_duration(inc int32) {
        this.duration += inc;
    }

    inline get_remain_t() uint32 {
        return this.t - this.last_t;
    }

    inline get_per<T>(x T) T {
        return (float(this->get_remain_t()) / this.duration) * x;
    }

    inline get_per_r<T>(x T) T {
        return x - this->get_per<T>(x);
    }

}
