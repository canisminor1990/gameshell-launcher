
class game+, scene+, intro {
    
    inherit game::scene = super;

    private import lib::sdl2;

    struct intro {
        fadeio fadeio;
        delay delay;
        logo texture;
    }

    func constructor() {
        constructor(this); }
    func destructor() {
        destructor(this); }

    func init(render void) bool {
        this.fadeio->init(this->get_window(), 2000);
        this.fadeio->set_color(235, 235, 235);
        this.delay->init(1000);
        this.logo->load_file(render,
            global::make_path("logo.png"));
        return true;
    }

    func draw(render void) {
        SDL_SetRenderDrawColor(render, 235, 235, 235, 0xff);
        SDL_RenderClear(render);
        var wnd. window = this->get_window();
        var rect SDL_Rect = 0;
        wnd->get_size(&rect.w, &rect.h);
        this.logo->draw(render,
            rect.w - (rect.w + this.logo->get_width()) / 2,
            rect.h - (rect.h + this.logo->get_height()) / 2);
        if this.fadeio->do() and this.delay->do() {
            wnd->set_new_scene<scene::main>();
        }
    }

}
